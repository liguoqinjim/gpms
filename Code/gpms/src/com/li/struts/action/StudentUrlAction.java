/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.li.struts.action;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.li.domain.AttachmentType;
import com.li.domain.Notice;
import com.li.domain.Student;
import com.li.domain.Subject;
import com.li.domain.SubjectType;
import com.li.domain.SystemStatus;
import com.li.domain.Teacher;
import com.li.service.imp.AttachmentTypeService;
import com.li.service.inters.AttachmentTypeServiceInter;
import com.li.service.inters.NoticeServiceInter;
import com.li.service.inters.SubjectServiceInter;
import com.li.service.inters.SubjectTypeServiceInter;
import com.li.service.inters.SystemStatusServiceInter;
import com.li.service.inters.TeacherServiceInter;
import com.li.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 05-26-2014
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class StudentUrlAction extends DispatchAction {
	@Resource
	private SubjectServiceInter subjectServiceInter;
	@Resource
	private SystemStatusServiceInter systemStatusServiceInter;
	@Resource
	private NoticeServiceInter noticeServiceInter;
	@Resource
	private TeacherServiceInter teacherServiceInter;
	@Resource
	private SubjectTypeServiceInter subjectTypeServiceInter;
	@Resource
	private AttachmentTypeServiceInter attachmentTypeServiceInter;
	public void setAttachmentTypeServiceInter(
			AttachmentTypeServiceInter attachmentTypeServiceInter) {
		this.attachmentTypeServiceInter = attachmentTypeServiceInter;
	}
	public void setSystemStatusServiceInter(
			SystemStatusServiceInter systemStatusServiceInter) {
		this.systemStatusServiceInter = systemStatusServiceInter;
	}
	public void setTeacherServiceInter(TeacherServiceInter teacherServiceInter) {
		this.teacherServiceInter = teacherServiceInter;
	}
	public void setSubjectTypeServiceInter(
			SubjectTypeServiceInter subjectTypeServiceInter) {
		this.subjectTypeServiceInter = subjectTypeServiceInter;
	}
	public void setNoticeServiceInter(NoticeServiceInter noticeServiceInter) {
		this.noticeServiceInter = noticeServiceInter;
	}
	public ActionForward studentChangePwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("studentChangePwd");
	}
	public ActionForward studentMain(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		List<Notice> notices = noticeServiceInter.loadNoticesByGrade(Constants.Notice_Constants.NOTICE_GRADE_STUDENT);
		request.setAttribute("notices", notices);
		
		return mapping.findForward("studentMain");
	}
	public ActionForward studentOk(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("studentOk");
	}
	public ActionForward studentSelectOne(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		SystemStatus systemStatus = systemStatusServiceInter.loadSystemStatusById(2);
		if(systemStatus.getSystemStatus() == 1){
			Student student = (Student) request.getSession().getAttribute("student");
			int id = student.getId();
//			List<Subject> subjects = subjectServiceInter.loadSubjectsByMajor(id);
			List<Subject> subjects = subjectServiceInter.loadSubjectsCanSelectByMajor(id);
			
			request.getSession().setAttribute("subjects", subjects);
			System.out.println("StudentUrlAction::studentSelectOne::subject.size=" + subjects.size());
			
			return mapping.findForward("studentSelectOne");
		}
		else{
			request.setAttribute("error", Constants.ErrorCodes.SYSTEM_NOT_OPEN);
			return mapping.findForward("studentError");
		}
	}
	public ActionForward studentSelectTwo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		SystemStatus systemStatus = systemStatusServiceInter.loadSystemStatusById(3);
		if(systemStatus.getSystemStatus() == 1){
			Student student = (Student) request.getSession().getAttribute("student");
			int id = student.getId();
			List<Subject> subjects = subjectServiceInter.loadSubjectsByMajor(id);
			
			request.getSession().setAttribute("subjects", subjects);
			
			return mapping.findForward("studentSelectTwo");
		}
		else{
			request.setAttribute("error", Constants.ErrorCodes.SYSTEM_NOT_OPEN);
			return mapping.findForward("studentError");
		}
	}
	public ActionForward studentUploadFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		SystemStatus systemStatus = systemStatusServiceInter.loadSystemStatusById(4);
		if(systemStatus.getSystemStatus() == 1){
			
			Student student = (Student) request.getSession().getAttribute("student");
			Subject subject = subjectServiceInter.loadSubjectByStudent(student.getStudentId());
			List<AttachmentType> attachmentTypes = attachmentTypeServiceInter.loadAttachmentTypes();
			
			request.setAttribute("subject", subject);
			request.setAttribute("attachmentTypes", attachmentTypes);
			
			
			return mapping.findForward("studentUploadFile");
		}
		else{
			request.setAttribute("error", Constants.ErrorCodes.SYSTEM_NOT_OPEN);
			return mapping.findForward("studentError");
		}
		
		
	}
	
	public ActionForward studentViewQuestion(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		Student	student = (Student) request.getSession().getAttribute("student");
		//student的id，不是学号
		List<Subject> subjects = subjectServiceInter.loadSubjectsByMajor(student.getId());
		
		System.out.println("StudentUrlAction::studentViewQuestion::subjects.size= " + subjects.size() );
		
		request.getSession().setAttribute("subjects", subjects);
		
		return mapping.findForward("studentViewQuestion");
	}
	public ActionForward studentViewScore(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		Student student = (Student) request.getSession().getAttribute("student");
		//student的学号
		Subject subject = subjectServiceInter.loadSubjectByStudent(student.getStudentId());
		
		request.getSession().setAttribute("subject", subject);
		
		return mapping.findForward("studentViewScore");
	}
	public ActionForward studentError(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("studentError");
	}
	public ActionForward studentCalendar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("studentCalendar");
	}
	public ActionForward studentViewTeacher(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		Student student = (Student) request.getSession().getAttribute("student");
		
		
		Subject subject = subjectServiceInter.loadSubjectByStudent(student.getStudentId()	);
		
		request.setAttribute("subjectTeacher", subject.getTeacher());
		
		return mapping.findForward("studentViewTeacher");
	}
	public ActionForward studentLogout(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("login");
	}
	public void setSubjectServiceInter(SubjectServiceInter subjectServiceInter) {
		this.subjectServiceInter = subjectServiceInter;
	}
}