/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.li.struts.action;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import com.li.service.inters.ClazzServiceInter;
import com.li.service.inters.DeptServiceInter;
import com.li.service.inters.MajorServiceInter;
import com.li.service.inters.StudentServiceInter;
import com.li.service.inters.TeacherServiceInter;
import com.li.struts.form.AdminUploadForm;
import com.li.web.domain.ClazzWeb;
import com.li.web.domain.DeptWeb;
import com.li.web.domain.MajorWeb;
import com.li.web.domain.StudentWeb;
import com.li.web.domain.TeacherWeb;

/** 
 * MyEclipse Struts
 * Creation date: 06-04-2014
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class AdminUploadAction extends DispatchAction {
	private ClazzServiceInter clazzServiceInter;
	private MajorServiceInter majorServiceInter;
	private DeptServiceInter deptServiceInter;
	private StudentServiceInter studentServiceInter;
	private TeacherServiceInter teacherServiceInter;
	
//	public ActionForward uploadXml(ActionMapping mapping, ActionForm form,
//			HttpServletRequest request, HttpServletResponse response) {
//		// TODO Auto-generated method stub
//		AdminUploadForm AdminUploadForm = (AdminUploadForm)form;
//		FormFile myFile = AdminUploadForm.getMyFile();
//		
//		InputStream inputStream = null;
//		List<Teacher> teachers = null;
//		
//		try {
//			inputStream = myFile.getInputStream();
//			teachers = new ArrayList<Teacher>();
//			
//			Workbook workbook = Workbook.getWorkbook(inputStream);
//			Sheet sheet = workbook.getSheet(0);
//			int row = sheet.getRows();
//			for(int i = 1;i <= row;i++){
//				Cell[] cells = sheet.getRow(i);
//				Teacher teacher = new Teacher();
//				teacher.setTeacherId(cells[0].getContents());
//				teacher.setTeacherName(cells[1].getContents());
//				teacher.setTeacherTel(cells[2].getContents());
//				teacher.setTeacherEmail(cells[3].getContents());
//				
//				teachers.add(teacher);
//			}
//		} catch (Exception e) {
//			// TODO: handle exception
//		}finally{
//			try {
//				inputStream.close();
//			} catch (IOException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		
//		request.getSession().setAttribute("teachers", teachers);
//		return mapping.findForward("ok");
//	}
	
	
	/**
	 * 上传学生xls,用studentId确定唯一
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward uploadStudent(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		AdminUploadForm AdminUploadForm = (AdminUploadForm)form;
		FormFile myFile = AdminUploadForm.getMyFile();
		
		InputStream inputStream = null;
		List<StudentWeb> students = null;
		Workbook workbook = null;
		
		try {
			inputStream = myFile.getInputStream();
			students = new ArrayList<StudentWeb>();
			
			workbook = Workbook.getWorkbook(inputStream);
			Sheet sheet = workbook.getSheet(0);
			int row = sheet.getRows();
			for(int i = 1;i < row;i++){
				Cell[] cells = sheet.getRow(i);
				StudentWeb student = new StudentWeb();
				//学号 姓名 班级 手机 Email
				student.setStudentId(cells[0].getContents());
				String id = student.getStudentId();
				if(studentServiceInter.hasStudent(student.getStudentId()) == 0){
					student.setStudentName(cells[1].getContents());
					student.setStudentClazz(cells[2].getContents());
					student.setStudentTel(cells[3].getContents());
					student.setStudentEmail(cells[4].getContents());
					
					students.add(student);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally{
			try {
				inputStream.close();
				workbook.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		request.getSession().setAttribute("students", students);
		return mapping.findForward("adminUploadStudent");
	}

	/**
	 * 上传major.xls
	 */
	public ActionForward uploadMajor(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		AdminUploadForm AdminUploadForm = (AdminUploadForm)form;
		FormFile myFile = AdminUploadForm.getMyFile();
		
		InputStream inputStream = null;
		List<MajorWeb> majorWebs = null;
		Workbook workbook = null;
		
		try {
			inputStream = myFile.getInputStream();
			majorWebs = new ArrayList<MajorWeb>();
			
			workbook = Workbook.getWorkbook(inputStream);
			Sheet sheet = workbook.getSheet(0);
			int row = sheet.getRows();
			for(int i = 1;i < row;i++){
				Cell[] cells = sheet.getRow(i);
				MajorWeb majorWeb = new MajorWeb();
				//学号 姓名 班级 手机 Email
				majorWeb.setMajorName(cells[0].getContents());
				if(majorServiceInter.hasMajor(majorWeb.getMajorName()) == 0){
					majorWeb.setMajorDept(cells[1].getContents());
					
					majorWebs.add(majorWeb);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally{
			try {
				inputStream.close();
				workbook.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		request.getSession().setAttribute("majors", majorWebs);
		return mapping.findForward("adminUploadMajor");
	}
	
	/**
	 * 上传clazz.xls
	 */
	public ActionForward uploadClazz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		AdminUploadForm AdminUploadForm = (AdminUploadForm)form;
		FormFile myFile = AdminUploadForm.getMyFile();
		
		InputStream inputStream = null;
		List<ClazzWeb> clazzWebs = null;
		Workbook workbook = null;
		
		try {
			inputStream = myFile.getInputStream();
			clazzWebs = new ArrayList<ClazzWeb>();
			
			workbook = Workbook.getWorkbook(inputStream);
			Sheet sheet = workbook.getSheet(0);
			int row = sheet.getRows();
			for(int i = 1;i < row;i++){
				Cell[] cells = sheet.getRow(i);
				ClazzWeb clazzWeb = new ClazzWeb();
				clazzWeb.setClazzName(cells[0].getContents());
				
				if(clazzServiceInter.hasClazz(clazzWeb.getClazzName()) == 0){
					clazzWeb.setClazzGrade(cells[1].getContents());
					clazzWeb.setClazzMajor(cells[2].getContents());
					
					clazzWebs.add(clazzWeb);
				}
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally{
			try {
				inputStream.close();
				workbook.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		request.getSession().setAttribute("clazzs", clazzWebs);
		return mapping.findForward("adminUploadClazz");
	}
	
	/**
	 * 上传teacher.xls
	 */
	public ActionForward uploadTeacher(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		AdminUploadForm AdminUploadForm = (AdminUploadForm)form;
		FormFile myFile = AdminUploadForm.getMyFile();
		
		InputStream inputStream = null;
		List<TeacherWeb> teacherWebs = null;
		Workbook workbook = null;
		
		try {
			inputStream = myFile.getInputStream();
			teacherWebs = new ArrayList<TeacherWeb>();
			
			workbook = Workbook.getWorkbook(inputStream);
			Sheet sheet = workbook.getSheet(0);
			int row = sheet.getRows();
			for(int i = 1;i < row;i++){
				Cell[] cells = sheet.getRow(i);
				TeacherWeb teacherWeb = new TeacherWeb();
				//工号	姓名	学院	职务	电话	Email
				teacherWeb.setTeacherId(cells[0].getContents());
				String teacherId = teacherWeb.getTeacherId();
				
				if(teacherServiceInter.hasTeacher(teacherWeb.getTeacherId()) == 0){
					teacherWeb.setTeacherName(cells[1].getContents());
					teacherWeb.setTeacherDept(cells[2].getContents());
					teacherWeb.setTeacherMajor(cells[3].getContents());
					teacherWeb.setTeacherGrade(cells[4].getContents());
					teacherWeb.setTeacherTel(cells[5].getContents());
					teacherWeb.setTeacherEmail(cells[6].getContents());
					
					teacherWebs.add(teacherWeb);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally{
			try {
				inputStream.close();
				workbook.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		request.getSession().setAttribute("teachers", teacherWebs);
		return mapping.findForward("adminUploadTeacher");
	}

	
	/**
	 * 上传dept.xls
	 */
	public ActionForward uploadDept(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		AdminUploadForm AdminUploadForm = (AdminUploadForm)form;
		FormFile myFile = AdminUploadForm.getMyFile();
		
		InputStream inputStream = null;
		List<DeptWeb> deptWebs = null;
		Workbook workbook = null;
		
		try {
			inputStream = myFile.getInputStream();
			deptWebs = new ArrayList<DeptWeb>();
			
			workbook = Workbook.getWorkbook(inputStream);
			Sheet sheet = workbook.getSheet(0);
			int row = sheet.getRows();
			for(int i = 1;i < row;i++){
				Cell[] cells = sheet.getRow(i);
				DeptWeb deptWeb = new DeptWeb();
				//工号	姓名	学院	职务	电话	Email
				deptWeb.setDeptName(cells[0].getContents());
				if(deptServiceInter.hasDept(deptWeb.getDeptName()) == 0){
					deptWeb.setDeptTel(cells[1].getContents());
					deptWebs.add(deptWeb);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally{
			try {
				inputStream.close();
				workbook.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		request.getSession().setAttribute("depts", deptWebs);
		return mapping.findForward("adminUploadDept");
	}
	public void setClazzServiceInter(ClazzServiceInter clazzServiceInter) {
		this.clazzServiceInter = clazzServiceInter;
	}
	public void setMajorServiceInter(MajorServiceInter majorServiceInter) {
		this.majorServiceInter = majorServiceInter;
	}
	public void setDeptServiceInter(DeptServiceInter deptServiceInter) {
		this.deptServiceInter = deptServiceInter;
	}
	public void setStudentServiceInter(StudentServiceInter studentServiceInter) {
		this.studentServiceInter = studentServiceInter;
	}
	public void setTeacherServiceInter(TeacherServiceInter teacherServiceInter) {
		System.out.println("setter方法");
		this.teacherServiceInter = teacherServiceInter;
	}
	
}